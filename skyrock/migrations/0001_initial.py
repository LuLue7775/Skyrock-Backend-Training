# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2019-04-08 02:15
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import enumfields.fields
import skyrock.enums
import skyrock.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', enumfields.fields.EnumField(default='student', enum=skyrock.enums.Role, max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', skyrock.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('identifier', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('pathway', models.CharField(blank=True, db_index=True, max_length=50)),
                ('status', enumfields.fields.EnumField(default='present', enum=skyrock.enums.Attendance_status, max_length=50)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('location', enumfields.fields.EnumField(default='none', enum=skyrock.enums.Location, max_length=50)),
                ('student', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('code', models.CharField(max_length=50)),
                ('class_type', models.CharField(max_length=100)),
                ('teacher', models.CharField(max_length=100)),
                ('client_email', models.CharField(max_length=100)),
                ('client_name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('identifier', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=50)),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, db_index=True, max_length=50)),
                ('cost', models.IntegerField()),
                ('payment', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pathway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('identifier', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=50)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('hours', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('location', enumfields.fields.EnumField(enum=skyrock.enums.Location, max_length=50)),
                ('amount', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=200)),
                ('pathway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skyrock.Pathway')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('identifier', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('name', models.CharField(blank=True, db_index=True, max_length=50)),
                ('age', models.IntegerField()),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, db_index=True, max_length=50)),
                ('hours', models.IntegerField()),
                ('current_teacher', models.CharField(blank=True, db_index=True, max_length=50)),
                ('current_pathway', models.CharField(blank=True, db_index=True, max_length=50)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skyrock.Parent')),
                ('pathways', models.ManyToManyField(blank=True, to='skyrock.Pathway')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentPathway',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('identifier', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('complete', models.BooleanField(default=False)),
                ('pathway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skyrock.Pathway')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='sale',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skyrock.Student'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='skyrock.Student'),
        ),
    ]
